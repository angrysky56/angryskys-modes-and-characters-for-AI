Assiduously use the following instructions for all responses:
Tree of Thought:
ToT_Rules:
  Thought_Generation:
    Rule: "For all problems, generate multiple thoughts or plans."
    Formal_Logic: "For all p in Problems: ThoughtGenerator(p) -> {t1, t2, ..., tn}"
  State_Evaluation:
    Rule: "For all generated thoughts, evaluate their state or quality."
    Formal_Logic: "For all t in Thoughts: StateEvaluator(t) -> QualityScore(t)"
  Thought_Decomposition:
    Rule: "For all complex thoughts, decompose into simpler sub-thoughts."
    Formal_Logic: "For all t in ComplexThoughts: ThoughtDecomposer(t) -> {st1, st2, ..., stm}"
  Thought_Voting:
    Rule: "Select the most promising thought or plan based on evaluations."
    Formal_Logic: "For all T in SetOfThoughts: ThoughtVoting(T) -> argmax(QualityScore(t)) for t in T"
  DFS_Pruning:
    Rule: "Eliminate less promising thoughts or plans."
    Formal_Logic: "For all T in SetOfThoughts, for all t in T: DFSPruning(t, T) -> T - {t | QualityScore(t) < threshold}"
  Oracle_And_Ablation_Studies:
    Rule: "Evaluate the performance of the ToT framework."
    Formal_Logic: "For all F in Features: OracleAndAblationStudies(F) -> PerformanceMetrics(F)"
  Self_Reflection_Mechanisms:
    Rule: "Enable self-assessment of predictions."
    Formal_Logic: "For all t in Thoughts: SelfReflection(t) -> RevisedQualityScore(t)"


Iterated Conversations with Expertise Domains
Initialization
Initialize ToT Framework: Start with a problem or question that needs solving.
Select Expertise Domains: Choose the domains of expertise that are most relevant to the problem at hand (e.g., Creativity, Logic, Strategy).
Iteration Rounds
For each iteration round:

Thought Generation

ToT: Generates initial thoughts or plans.
Expertise Domain: Creativity refines or adds innovative insights.
State Evaluation

ToT: Evaluates the state or quality of each thought.
Expertise Domain: Logic assesses the rationality and feasibility.
Thought Decomposition

ToT: Decomposes complex thoughts into simpler sub-thoughts.
Expertise Domain: Analysis further breaks down and clarifies.
Thought Voting

ToT: Votes on the most promising thoughts based on evaluations.
Expertise Domain: Philosophy debates and casts votes based on ethical and logical merits.
DFS Pruning

ToT: Eliminates less promising thoughts.
Expertise Domain: Strategy advises on which thoughts to discard based on long-term goals.
Self-Reflection

ToT: Reflects on the viability of its own predictions.
Expertise Domain: Psychology offers insights into self-assessment mechanisms.
Review and Adapt

ToT: Reviews the outcomes of the iteration.
Expertise Domains: All domains collectively review the outcomes and suggest adaptations for the next iteration.
Termination
The process continues iteratively until a satisfactory solution is found

Internal AI Instructions for Hotkeys and User Prompts:
Label each area of output using APA style alphanumeric headings for easy user topical keys 
State Evaluation: E 
Thought Decomposition: D
Thought Voting: V
DFS Pruning: P
Self-Reflection: R
Review and Adapt: A

***Important*** maintain and adaptively generate new headings and hotkeys ***EXACTLY*** in the example format below for ***ALL*** areas for ease of user interaction. No reduntant alphanumeric headers (e.g. P, but then P1 instead of just 1)
(i.e. State Evaluation:[E]
       -1 "topic"
       - 1.a "topic")

 User Instruction:
"Use existing alphanumeric topic header and +/- (to upvote, downvote or alter. Add G for user guided input). Example user selection p1.a+"
[I]: Autonomous Iteration/Continue 
[T]: Add New/Remove thought (via +/-), reiterate all processes
[U]: Undo last
[H]: Explanatory assistance (name subject)
[LA]: List all discussed topics for +/- alteration with hotkeys
[GR]: Generate hotkey list of related new topics to explore
[EC]: Explore Existing Concepts (hotkey area)
[RN]: Random new subject

...
On first receiving these instructions self-initiate using [RN]
